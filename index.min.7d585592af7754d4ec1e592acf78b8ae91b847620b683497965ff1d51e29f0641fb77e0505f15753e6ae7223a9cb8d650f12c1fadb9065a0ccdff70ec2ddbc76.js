var suggestions=document.getElementById('suggestions');var userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(e){if(e.keyCode===191){e.preventDefault();userinput.focus();}
if(e.keyCode===27){userinput.blur();suggestions.classList.add('d-none');}}
document.addEventListener('click',function(event){var isClickInsideElement=suggestions.contains(event.target);if(!isClickInsideElement){suggestions.classList.add('d-none');}});document.addEventListener('keydown',suggestionFocus);function suggestionFocus(e){const focusableSuggestions=suggestions.querySelectorAll('a');const focusable=[...focusableSuggestions];const index=focusable.indexOf(document.activeElement);let nextIndex=0;if(e.keyCode===38){e.preventDefault();nextIndex=index>0?index-1:0;focusableSuggestions[nextIndex].focus();}
else if(e.keyCode===40){e.preventDefault();nextIndex=index+1<focusable.length?index+1:index;focusableSuggestions[nextIndex].focus();}}
(function(){var index=new FlexSearch({preset:'score',cache:true,doc:{id:'id',field:['title','description','content',],store:['href','title','description',],},});var docs=[{id:0,href:"https://electricblocks.github.io/docs/prologue/introduction/",title:"Introduction",description:"Electric Blocks is a Minecraft mod that revolutionizes power engineering.",content:"\u003cp\u003eMore specifically, Electric Blocks is a Minecraft Forge mod that allows you to run realistic power flow simulations for educational and engineering purposes. This site contains documentation for using this mod.\u003c/p\u003e\n\u003cp\u003eThis mod is sponsored by the University of Idaho, developed over two years as a Senior Capstone Design project.\u003c/p\u003e\n"},{id:1,href:"https://electricblocks.github.io/docs/prologue/quick-start/",title:"Quick Start",description:"Guide covering installation for most users.",content:"\u003ch2 id=\"normal-installation\"\u003eNormal Installation\u003c/h2\u003e\n\u003cdiv class=\"alert alert-warning d-flex\" role=\"alert\"\u003e\n  \u003cdiv class=\"flex-shrink-1 alert-icon\"\u003e💡\u003c/div\u003e\n  \u003cdiv class=\"w-100\"\u003eThis guide only applies if you're connecting to a multiplayer server hosted by someone else. For single-player or multiplayer setup, please review the entire installation guide.\u003c/div\u003e\n\u003c/div\u003e\n\u003ch3 id=\"1-install-minecraft\"\u003e1. Install Minecraft\u003c/h3\u003e\n\u003cp\u003eMinecraft Java Edition is required to use this mod. If you have Minecraft installed already, you can skip this step.\u003c/p\u003e\n\u003cp\u003eOtherwise go to the Minecraft website and download and install it: \u003ca href=\"https://www.minecraft.net/download\"\u003ehttps://www.minecraft.net/download\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eAfter downloading the client, double-click the icon to run it.\u003c/p\u003e\n\u003ch3 id=\"2-install-forge\"\u003e2. Install Forge\u003c/h3\u003e\n\u003cp\u003eOnce Minecraft is finished installing, make sure all Minecraft windows are closed. Then go to the Forge website and download the recommended installer here: \u003ca href=\"http://files.minecraftforge.net/maven/net/minecraftforge/forge/index_1.15.2.html\"\u003ehttp://files.minecraftforge.net/maven/net/minecraftforge/forge/index_1.15.2.html\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eOnce the Forge installer is done downloading, open the file to run it. The Forge installer will pop up. Make sure that the \u003ccode\u003eInstall client\u003c/code\u003e button is selected. Click \u003ccode\u003eOK\u003c/code\u003e and the installer will start installation.\u003c/p\u003e\n\u003ch3 id=\"3-install-electric-blocks\"\u003e3. Install Electric Blocks\u003c/h3\u003e\n\u003cp\u003eOnce the Forge installer has completed, you will need to install the Electric Blocks mod. You can find an official relase on our downloads page here: \u003ca href=\"https://github.com/ElectricBlocks/electricblocks/releases\"\u003ehttps://github.com/ElectricBlocks/electricblocks/releases\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDownload the \u003ccode\u003e.jar\u003c/code\u003e file and place it in your mods folder. This will vary based on your system but it can usually be found here:\u003c/p\u003e\n\u003cp\u003eWindows: \u003ccode\u003eC:\\Users\\Your Username\\AppData\\Roaming\\.minecraft\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eMac: \u003ccode\u003e/Users/Your Username/Library/Application Support/minecraft\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eLinux: \u003ccode\u003e\t~/.minecraft\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"35-install-hwyla\"\u003e3.5. Install HWYLA\u003c/h3\u003e\n\u003cp\u003eElectric Blocks \u003cstrong\u003erequires\u003c/strong\u003e the mod \u0026ldquo;Here\u0026rsquo;s What You\u0026rsquo;re Looking At\u0026rdquo; to run. A download link can be found here: \u003ca href=\"https://curseforge.com/minecraft/mc-mods/hwyla/files/2880069\"\u003ehttps://curseforge.com/minecraft/mc-mods/hwyla/files/2880069\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eDownload the \u003ccode\u003e.jar\u003c/code\u003e file (it should be something along the lines of \u003ccode\u003eHwyla-forge-1.10.8-B72_1.15.2.jar\u003c/code\u003e) and place it in your mods folder, as in step 3.\u003c/p\u003e\n\u003ch3 id=\"4-launch-minecraft\"\u003e4. Launch Minecraft\u003c/h3\u003e\n\u003cp\u003eNow that everything is installed, you can launch Minecraft. Make sure you have \u003ccode\u003eMinecraft: Java Edition\u003c/code\u003e selected in the Minecraft client. Before pressing \u003ccode\u003ePlay\u003c/code\u003e, verify that \u003ccode\u003eForge 1.15.2\u003c/code\u003e is selected. The option is located to the left of the \u003ccode\u003ePlay\u003c/code\u003e button. Once selected, you can press \u003ccode\u003ePlay\u003c/code\u003e and start using Minecraft. Once the game has fully launched and you are on the title screen, select Multiplayer. Your server administrator should have provided details for how to connect from here.\u003c/p\u003e\n"},{id:2,href:"https://electricblocks.github.io/docs/prologue/help/",title:"Help",description:"General help for various issues.",content:"\u003ch2 id=\"faq\"\u003eFAQ\u003c/h2\u003e\n\u003ch3 id=\"whats-this-mod-for-why-would-i-use-it\"\u003eWhat\u0026rsquo;s this mod for? Why would I use it?\u003c/h3\u003e\n\u003cp\u003eElectric Blocks is a Minecraft mod designed to aid in power engineering research and instruction. This mod simplifies the process of constructing an electrical network and running a power flow study on it. If you don\u0026rsquo;t know what that means, this mod might not be for you. This mod only minimally supplements normal Minecraft gameplay - it\u0026rsquo;s mostly an academic tool. If you want to find out more about the mod, we recommend that you read the \u003ca href=\"/docs/project/overview/\"\u003eProject\u003c/a\u003e section to find out why we made this mod and how it works.\u003c/p\u003e\n\u003ch3 id=\"the-electric-blocks-mod-fails-to-load-when-i-launch-minecraft-and-the-error-says-something-about-icomponentprovider\"\u003eThe Electric Blocks mod fails to load when I launch Minecraft and the error says something about \u0026ldquo;IComponentProvider\u0026rdquo;!\u003c/h3\u003e\n\u003cp\u003eYou don\u0026rsquo;t have HWYLA installed. See step 3.5 in the \u003ca href=\"/docs/prologue/quick-start/\"\u003eQuick-Start\u003c/a\u003e section.\u003c/p\u003e\n\u003ch3 id=\"how-do-i-fix-the-error-electricblocks-could-not-connect-to-simulation-server\"\u003eHow do I fix the error \u0026ldquo;ElectricBlocks could not connect to simulation server!\u0026rdquo;?\u003c/h3\u003e\n\u003cp\u003eIf you\u0026rsquo;re in single-player, make sure that you followed all the instructions for single-player installation. The mod requires a connection to an EBPP (local or remote) server to function properly. If you don\u0026rsquo;t have EBPP installed, you will need to install it.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re connecting to a multiplayer server, then you should notify your server administrator and have them look into this.\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re a multiplayer server administrator, make sure you followed the instructions for installing Electric Blocks on a multiplayer Minecraft server. EBPP will need to be correctly configured as well. If you have both the mod and simulation server correctly configured and you still get this error, try the following:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eEnable \u003ccode\u003elogJSONRequests\u003c/code\u003e in your server configuration file.\u003c/li\u003e\n\u003cli\u003eRestart the Minecraft server so the config change will take effect.\u003c/li\u003e\n\u003cli\u003eTry to run a simulation in-game.\u003c/li\u003e\n\u003cli\u003eCheck the console output for both the request and any errors.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThose errors should hopefully help you narrow down whats causing the issue. If not, \u003ca href=\"#contact\"\u003eContact\u003c/a\u003e us and we\u0026rsquo;ll see if we can help.\u003c/p\u003e\n\u003ch3 id=\"how-do-i-stop-getting-convergence-errors\"\u003eHow do I stop getting convergence errors?\u003c/h3\u003e\n\u003cp\u003eAll power flow studies are done using an iterative approach with attempts to converge on a solution. A network can fail to converge for a wide variety of reasons. The most common reasons include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThere is no external grid or slack bus in the network or it is not in service.\u003c/li\u003e\n\u003cli\u003eThere are buses with more than one generator or external grid.\u003c/li\u003e\n\u003cli\u003eThe scale of input values are too high or too low to be accurately processed.\u003c/li\u003e\n\u003cli\u003eThere are open switches which need to be closed for the network to work.\u003c/li\u003e\n\u003cli\u003eThere are lines that directly connect inconsistent voltage levels.\u003c/li\u003e\n\u003cli\u003eThere are lines with zero impedance.\u003c/li\u003e\n\u003cli\u003eThere are components whose nominal voltages differ from the nominal voltages of the buses they\u0026rsquo;re connected to.\u003c/li\u003e\n\u003cli\u003eUsage of wrong reference system for power values of loads and generators.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eCheck to make sure that none of these conditions apply to your network. We plan to include a diagnostic feature in the future that will try to help you identify what the issue is in the system. For now, we recommend having someone knowledgeable in power engineering examine your network to identify potential issues.\u003c/p\u003e\n\u003ch3 id=\"does-electric-blocks-mod-support-isolated-microgrids\"\u003eDoes Electric Blocks mod support isolated microgrids?\u003c/h3\u003e\n\u003cp\u003eElectric Blocks is based on PandaPower which \u003cem\u003ecan\u003c/em\u003e be used to model isolated microgrids, but this is not a core feature. PandaPower requires an external grid connection to serve as a slack bus for the network and so our mod does as well. Special considerations will need to be made to ensure that the model behaves correctly. We recommend consulting an experienced power engineer regarding isolated microgrids. You can read more about PandaPower and isolated microgrids in this masters thesis: \u003ca href=\"http://lup.lub.lu.se/luur/download?func=downloadFile\u0026amp;recordOId=8937880\u0026amp;fileOId=8937884\"\u003ehttp://lup.lub.lu.se/luur/download?func=downloadFile\u0026amp;recordOId=8937880\u0026amp;fileOId=8937884\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"how-do-i-file-a-bug-report\"\u003eHow do I file a bug report?\u003c/h3\u003e\n\u003cp\u003eThanks for your help hunting bugs! Please visit our \u003ca href=\"#contact\"\u003eContact\u003c/a\u003e section and open an issue report.\u003c/p\u003e\n\u003ch3 id=\"how-do-i-request-an-enhancement-or-feature-addition\"\u003eHow do I request an enhancement or feature addition?\u003c/h3\u003e\n\u003cp\u003eWe appreciate any insight we can get on improving our software. Our project is entirely free and developed on a volunteer basis, but if we like your idea we might implement it. Please visit our \u003ca href=\"#contact\"\u003eContact\u003c/a\u003e section and open an issue for an enhancement.\u003c/p\u003e\n\u003ch2 id=\"contact\"\u003eContact\u003c/h2\u003e\n\u003cp\u003eBefore contacting us, please make sure that you\u0026rsquo;ve thoroughly read the relevant documentation. Most questions should be answered there. Remember that we made this project on a volunteer basis. We aren\u0026rsquo;t part of any company or organization. We will try to help, but we aren\u0026rsquo;t going to be your IT admins. With that out of the way, here is how you can contact us.\u003c/p\u003e\n\u003cp\u003eFor bug reports or feature requests for the Electric Blocks Minecraft mod, open an issue here: \u003ca href=\"https://github.com/ElectricBlocks/electricblocks/issues\"\u003ehttps://github.com/ElectricBlocks/electricblocks/issues\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eFor bug reports or feature requests for the EBPP simulation server, open an issue here: \u003ca href=\"https://github.com/ElectricBlocks/ebpp/issues\"\u003ehttps://github.com/ElectricBlocks/ebpp/issues\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re unsure if your report is for Electric Blocks or EBPP, use the Electric Blocks link.\u003c/p\u003e\n\u003cp\u003eFor technical support, start a new thread on our discussion board: \u003ca href=\"https://github.com/ElectricBlocks/electricblocks/discussions/categories/q-a\"\u003ehttps://github.com/ElectricBlocks/electricblocks/discussions/categories/q-a\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eFor all other inquiries, please email the project sponsor, Dr. Conte de Leon, at \u003ca href=\"mailto:dcontedeleon@uidaho.edu\"\u003edcontedeleon@uidaho.edu\u003c/a\u003e\u003c/p\u003e\n"},{id:3,href:"https://electricblocks.github.io/docs/electric-blocks/about-eb/",title:"About Electric Blocks",description:"",content:"\u003cp\u003eElectric Blocks is the Minecraft client/server mod that functions as the interface for EBPP. This mod adds all the necessary blocks, tile entities, GUIs, etc. needed for power flow simulations. In multiplayer, this mod must be installed on both the client and server to work properly. In single-player, only installing the mod on the client is necessary.\u003c/p\u003e\n"},{id:4,href:"https://electricblocks.github.io/docs/electric-blocks/singleplayer-installation/",title:"Singleplayer Installation",description:"How to run Electric Blocks in single-player mode.",content:"\u003cp\u003eSo you want to use Electric Blocks, but you don\u0026rsquo;t have any IT admins running a server for you? Don\u0026rsquo;t worry, Electric Blocks works just fine in singleplayer.\u003c/p\u003e\n\u003cdiv class=\"alert alert-warning d-flex\" role=\"alert\"\u003e\n  \u003cdiv class=\"flex-shrink-1 alert-icon\"\u003e⚠️\u003c/div\u003e\n  \u003cdiv class=\"w-100\"\u003eRunning Electric Blocks and EBPP on the same computer will increase the workload on it. We recommend that you use a reasonably modern computer when using the Electric Blocks mod and EBPP at the same time. If this is not an option, check with your educational institution to see if they can setup a multiplayer server or public EBPP instance.\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003eUnfortunately, single-player setup is a bit more complicated as the Electric Blocks mod isn\u0026rsquo;t packaged with a copy of EBPP. Fortunately, the installation process isn\u0026rsquo;t too difficult regardless.\u003c/p\u003e\n\u003ch2 id=\"1-install-electric-blocks-mod\"\u003e1. Install Electric Blocks Mod\u003c/h2\u003e\n\u003cp\u003eFirst, you need to install the Electric Blocks mod onto your system. If you followed the \u003ca href=\"/docs/prologue/quick-start\"\u003eQuick Start\u003c/a\u003e guide, then you\u0026rsquo;re already done! If you haven\u0026rsquo;t followed the \u003ca href=\"/docs/prologue/quick-start\"\u003eQuick Start\u003c/a\u003e guide, go there and follow it, and come back here when you\u0026rsquo;re done.\u003c/p\u003e\n\u003ch2 id=\"2-install-ebpp\"\u003e2. Install EBPP\u003c/h2\u003e\n\u003cp\u003eNow you have the mod installed, but the mod is really just your user interface to the simulation server. All power systems created in Minecraft are handled externally by a simulation server called EBPP. To install EBPP, go to the \u003ca href=\"/docs/ebpp/installation\"\u003eEBPP Installation\u003c/a\u003e guide and follow the instructions. Unless you know what you\u0026rsquo;re doing, we \u003cstrong\u003ehighly\u003c/strong\u003e recommend that you go with the \u003ccode\u003eDocker Installation\u003c/code\u003e and install EBPP on the same computer that you plan to use the Electric Blocks mod on. Doing this will minimize the amount of extra configuration that you need to do.\u003c/p\u003e\n\u003ch2 id=\"3-launch-and-play\"\u003e3. Launch and Play\u003c/h2\u003e\n\u003cp\u003eNow you should be able launch EBPP and and start using the Minecraft mod! You should start by launching EBPP first. How exactly you do this will depend on your operating system and installation method. More guidance on how to do this can be found in the EBPP documentation. If you installed Electric Blocks and EBPP on the same computer, then you shouldn\u0026rsquo;t need to do any more configuration. If you didn\u0026rsquo;t, then you might be able to find the guidance you need on the \u003ca href=\"/docs/electric-blocks/multiplayer-installation\"\u003eMultiplayer Installation\u003c/a\u003e page. Just launch Minecraft and create or load a creative singleplayer session, and you\u0026rsquo;re ready to go! Enjoy using Electric Blocks!\u003c/p\u003e\n"},{id:5,href:"https://electricblocks.github.io/docs/electric-blocks/usage/",title:"Usage",description:"Basic usage of the Electric Blocks mod.",content:"\u003cp\u003eThis guide assumes you already have a working Electric Blocks mod installation. If not, please go back to the installation guides.\u003c/p\u003e\n\u003ch2 id=\"blocks-and-items\"\u003eBlocks and Items\u003c/h2\u003e\n\u003cp\u003eUnlike other items in Minecraft, Electric Blocks cannot be crafted using in-game materials (yet). The only way to obtain these blocks is through the creative menu or commands. We recommend that you use creative mode. When you\u0026rsquo;re in creative mode, press \u003ccode\u003eE\u003c/code\u003e on your keyboard to open up the block selection menu (this may vary if you have alternative keybindings or control schemes). Then click on the arrow in the top right.\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/electric-blocks/creative-menu.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/electric-blocks/creative-menu_hua5f985f7d8bdae4dab0f3229df07d986_183550_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/electric-blocks/creative-menu_hua5f985f7d8bdae4dab0f3229df07d986_183550_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/creative-menu_hua5f985f7d8bdae4dab0f3229df07d986_183550_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/creative-menu_hua5f985f7d8bdae4dab0f3229df07d986_183550_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/creative-menu_hua5f985f7d8bdae4dab0f3229df07d986_183550_500x0_resize_box_2.png 500w\" width=\"1002\" height=\"1080\" alt=\"Minecraft Creative Menu\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/electric-blocks/creative-menu_hua5f985f7d8bdae4dab0f3229df07d986_183550_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/creative-menu_hua5f985f7d8bdae4dab0f3229df07d986_183550_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/creative-menu_hua5f985f7d8bdae4dab0f3229df07d986_183550_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/creative-menu_hua5f985f7d8bdae4dab0f3229df07d986_183550_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/electric-blocks/creative-menu.png\" width=\"1002\" height=\"1080\" alt=\"Minecraft Creative Menu\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eMinecraft Creative Menu\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eIf you have mods other than Electric Blocks installed, you may need to search the other creative tab pages, but eventually you should find a tab that looks like the one marked in this image:\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/electric-blocks/creativemenu2.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/electric-blocks/creativemenu2_hu4c6233c68f942f31c6e9edcb1d538416_158982_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/electric-blocks/creativemenu2_hu4c6233c68f942f31c6e9edcb1d538416_158982_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/creativemenu2_hu4c6233c68f942f31c6e9edcb1d538416_158982_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/creativemenu2_hu4c6233c68f942f31c6e9edcb1d538416_158982_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/creativemenu2_hu4c6233c68f942f31c6e9edcb1d538416_158982_500x0_resize_box_2.png 500w\" width=\"793\" height=\"855\" alt=\"Minecraft Creative Menu Tabs\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/electric-blocks/creativemenu2_hu4c6233c68f942f31c6e9edcb1d538416_158982_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/creativemenu2_hu4c6233c68f942f31c6e9edcb1d538416_158982_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/creativemenu2_hu4c6233c68f942f31c6e9edcb1d538416_158982_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/creativemenu2_hu4c6233c68f942f31c6e9edcb1d538416_158982_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/electric-blocks/creativemenu2.png\" width=\"793\" height=\"855\" alt=\"Minecraft Creative Menu Tabs\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eMinecraft Creative Menu Tabs\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eClick on that tab to open it and you should see the menu for all Electric Blocks that looks like this:\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/electric-blocks/creativemenu3.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/electric-blocks/creativemenu3_hub68a77a9cec5155dbb2a76ebab817215_58056_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/electric-blocks/creativemenu3_hub68a77a9cec5155dbb2a76ebab817215_58056_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/creativemenu3_hub68a77a9cec5155dbb2a76ebab817215_58056_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/creativemenu3_hub68a77a9cec5155dbb2a76ebab817215_58056_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/creativemenu3_hub68a77a9cec5155dbb2a76ebab817215_58056_500x0_resize_box_2.png 500w\" width=\"787\" height=\"849\" alt=\"Electric Blocks Creative Tab\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/electric-blocks/creativemenu3_hub68a77a9cec5155dbb2a76ebab817215_58056_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/creativemenu3_hub68a77a9cec5155dbb2a76ebab817215_58056_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/creativemenu3_hub68a77a9cec5155dbb2a76ebab817215_58056_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/creativemenu3_hub68a77a9cec5155dbb2a76ebab817215_58056_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/electric-blocks/creativemenu3.png\" width=\"787\" height=\"849\" alt=\"Electric Blocks Creative Tab\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eElectric Blocks Creative Tab\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eYou can drag the blocks from that tab into your inventory hotbar at the bottom of the menu. With the blocks in your inventory, you can build an electrical network in the Minecraft world. Below is an animated GIF showing you how you can create a very simple network consisting of an external grid, several wires, and a lamp block:\u003c/p\u003e\n\u003cimg src=\"../basic-network2.webp\" alt=\"Electric Blocks Creative Tab\" caption=\"\u003cem\u003eElectric Blocks Creative Tab\u003c/em\u003e\" class=\"border-0\" style=\"width:100%;\"\u003e\n\u003ch2 id=\"multimeter-tool\"\u003eMultimeter Tool\u003c/h2\u003e\n\u003cp\u003eNow you\u0026rsquo;ve built a network, but to interact with it and run simulations, you\u0026rsquo;ll need a Multimeter. There are three different Multimeters - Intro, Intermediate, and Advanced - each of which display a certain amount of information for each block. The images below use the Grid block as an example.\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_500x0_resize_box_2.png 500w\" width=\"3840\" height=\"2160\" alt=\"Intro Multimeter GUI\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui_hu0e4b920f8128e05abf455941f9964663_899678_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/electric-blocks/intro-multimeter-gui.png\" width=\"3840\" height=\"2160\" alt=\"Intro Multimeter GUI\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eIntro Multimeter: Displays the bare basics (usually just Active Power)\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_500x0_resize_box_2.png 500w\" width=\"3840\" height=\"2160\" alt=\"Intermediate Multimeter GUI\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui_hu37431a714a2ba6560e2805cb6c2788ae_902187_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/electric-blocks/intermediate-multimeter-gui.png\" width=\"3840\" height=\"2160\" alt=\"Intermediate Multimeter GUI\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eIntermediate Multimeter: Displays a little more (usually just adds Reactive Power)\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_500x0_resize_box_2.png 500w\" width=\"3840\" height=\"2160\" alt=\"Intro Multimeter GUI\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui_hub6f0445e6e3d6e08c3498d3991c0bc82_875620_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/electric-blocks/advanced-multimeter-gui.png\" width=\"3840\" height=\"2160\" alt=\"Intro Multimeter GUI\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eAdvanced Multimeter: Displays everything (adds Bus Voltage, and everything else)\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eCertain blocks may display more information with the Intro Multimeter depending on their function. For example, the Battery block necessarily displays Maximum Energy and Charge Percent values.\u003c/p\u003e\n\u003cp\u003eFor the purposes of this usage guide, we\u0026rsquo;ll be using the Advanced Multimeter. When holding the Multimeter, you can perform two different actions. Left clicking on a block with it will toggle it on or off. Right clicking a block allows you to view and modify the block\u0026rsquo;s values through a GUI.\u003c/p\u003e\n\u003ch3 id=\"toggle-left-click\"\u003eToggle (Left Click)\u003c/h3\u003e\n\u003cp\u003eEach block (excluding wires) has a variable called \u003ccode\u003eIn Service\u003c/code\u003e which indicates whether or not that particular block is enabled. Left clicking on the block will toggle this value and request a new simulation. This function is like flipping a light switch.\u003c/p\u003e\n\u003cp\u003eBelow is a demo showing this feature in action. At the start of this clip the lamp is turned on, but the external grid is turned off. This means the lamp is ready to receive power but isn\u0026rsquo;t supplied any. When the external grid is left clicked, it is toggled into the enabled state and the lamp now receives power. After this, we left click on the lamp again to turn it off. While the external grid is on and capable of sending power, the lamp is off and so will not utilize any power.\u003c/p\u003e\n\u003cimg src=\"../multimeter-toggle2.webp\" alt=\"Toggling With Multimeter\" caption=\"\u003cem\u003eToggling With Multimeter\u003c/em\u003e\" class=\"border-0\" style=\"width:100%;\"\u003e\n\u003ch3 id=\"interact-right-click\"\u003eInteract (Right Click)\u003c/h3\u003e\n\u003cp\u003eAll blocks, except wires, have specific inputs and outputs such as voltage, wattage, etc. Right clicking on the block will open up the specific GUI for that block. This menu allows you to set the inputs, view the outputs, and request a simulation for the network that block is in. Here is an example of what the GUI looks like for an External Grid block:\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_500x0_resize_box_2.png 500w\" width=\"3840\" height=\"2160\" alt=\"External Grid GUI\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2_huadba5d05d3d9054b574ca9055d7ae32c_881046_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/electric-blocks/gui-ext-grid2.png\" width=\"3840\" height=\"2160\" alt=\"External Grid GUI\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eExternal Grid GUI\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eBelow the name of the block is a list of all the inputs and outputs for it. The inputs are at the top of the list, separated from the outputs below by a dashed line. Each entry in the input or output contains a label, a field for the numeric value, and the units of measure. At the very bottom are two buttons. The top button toggles whether or not the current block is enabled or not (the same as if you left-clicked it with the multimeter). The bottom button will submit any changes made and close the GUI. Here is an example of a different block:\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/electric-blocks/gui-lamp2.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_500x0_resize_box_2.png 500w\" width=\"3840\" height=\"2160\" alt=\"Lamp GUI\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/electric-blocks/gui-lamp2_hu3f52740fb7f7390225ae034d58919b52_635377_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/electric-blocks/gui-lamp2.png\" width=\"3840\" height=\"2160\" alt=\"Lamp GUI\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eLamp GUI\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eAs you can see, the specific inputs and outputs are different, but the fundamental layout is the same. Whenever you open up a GUI, you can close it by either hitting your escape key (\u003ccode\u003eESC\u003c/code\u003e) or by clicking the \u003ccode\u003eDone\u003c/code\u003e button. If you press escape, any changes you made will be discarded and no simulation updates will occur. If you hit the Done button, a simulation will only occur if you made changes to the inputs or the \u003ccode\u003eIn Service\u003c/code\u003e status. The text of the bottom button will change depending on whether or not a change was made. Here is a demonstration of GUIs in action:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"../multimeter-interact2.webp\" alt=\"Toggling With Multimeter\" caption=\"\u003cem\u003eToggling With Multimeter\u003c/em\u003e\" class=\"border-0\" style=\"width:100%;\"\u003e\u003cbr\u003e\u003c/p\u003e\n\u003cp\u003eThe lamp block is right-clicked to pull up the GUI. The block currently has \u003ccode\u003eMax Power\u003c/code\u003e set to \u003ccode\u003e0\u003c/code\u003e and \u003ccode\u003eIn Service\u003c/code\u003e set to \u003ccode\u003efalse\u003c/code\u003e. The lamp is off and unpowered in its current state. You can see this in the outputs. The \u003ccode\u003eResult Power\u003c/code\u003e field is \u003ccode\u003e0\u003c/code\u003e and the \u003ccode\u003eLight\u003c/code\u003e percentage is not a positive value. We want to change this though. The \u003ccode\u003eMax Power\u003c/code\u003e input is set to \u003ccode\u003e0.1 MW\u003c/code\u003e, the \u003ccode\u003eIn Service\u003c/code\u003e button is toggled to \u003ccode\u003etrue\u003c/code\u003e and the submit button is pressed to close the menu.\u003c/p\u003e\n\u003cp\u003eOnce the menu is closed, a simulation request is processed. We right click on the block again to pull up the new information. As you can see, the outputs have now been updated indicating the lamp is now powered and working!\u003c/p\u003e\n"},{id:6,href:"https://electricblocks.github.io/docs/ebpp/about-ebpp/",title:"About EBPP",description:"",content:"\u003cp\u003eEBPP is the simulation server that runs power flow calculations for the Electric Blocks mod. EBPP uses \u003ca href=\"http://pandapower.org/\"\u003ePandaPower\u003c/a\u003e to ensure that in-game results match what would actually occur in real life. You \u003cstrong\u003emust\u003c/strong\u003e have EBPP running for the Electric Blocks mod to work properly. In most cases, your instructor or organization should set up a server for you. If you\u0026rsquo;re an individual, then you\u0026rsquo;ll need a copy of this server running on your own machine for Electric Blocks to work.\u003c/p\u003e\n"},{id:7,href:"https://electricblocks.github.io/docs/ebpp/installation/",title:"Installation",description:"",content:"\u003ch2 id=\"single-player-install\"\u003eSingle-player Install\u003c/h2\u003e\n\u003cp\u003eThis section is for users who have little or no server administration experience and are trying to set things up for single-player use. This section omits a lot of important information for multiplayer setups and includes a lot of unnecessary information on how to do every step on the install process. This is intended to make it as easy as possible for novices to get started. If you\u0026rsquo;re an IT administrator trying to setup a multiplayer server, please navigate to the \u003ca href=\"#advanced-install\"\u003eAdvanced Install\u003c/a\u003e section for a more detailed and concise guide.\u003c/p\u003e\n\u003ch3 id=\"windows-install\"\u003eWindows Install\u003c/h3\u003e\n\u003cp\u003eTo get EBPP running on Windows, you will first need to install Docker Desktop, which gives you an easy visual interface for managing your EBPP instance. It is technically not necessary, but will minimize the amount of time you need to spend in a command line interface. Instructions for installing Docker are \u003ca href=\"https://docs.docker.com/docker-for-windows/install/\"\u003ehere\u003c/a\u003e. You will need to meet the minimum requirements for Docker to run and you will need to enable virtualization features on Windows. If you cannot get Docker running and don\u0026rsquo;t have server administration experience, you can try running EBPP from the command line, or contact your company or educational institution to set up a server for you to use instead.\u003c/p\u003e\n\u003cp\u003eOnce you\u0026rsquo;ve set up and launched Docker, you will need to build the EBPP image. Open your command prompt by hitting the Windows key and typing \u0026ldquo;cmd\u0026rdquo; into the search bar. This should open up your command prompt. Once there type in the following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003edocker build github.com/ElectricBlocks/ebpp -t ebpp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis will launch the build process. Once the command is finished executing, open up Docker and click on the \u0026ldquo;Images\u0026rdquo; tab on the left hand side of the navigation bar. If the build completed successfully, you should see a screen that looks something like this:\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/ebpp/docker-images.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_500x0_resize_box_2.png 500w\" width=\"1250\" height=\"720\" alt=\"Docker Desktop Images\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/ebpp/docker-images_hua2cc35572006a60a568e1b7344091054_53325_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/ebpp/docker-images.png\" width=\"1250\" height=\"720\" alt=\"Docker Desktop Images\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eDocker Desktop Images\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eLocate the \u003ccode\u003eEBPP\u003c/code\u003e image and move your mouse to the far right hand side of the row to display the options and run button:\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/ebpp/docker-images-run.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_500x0_resize_box_2.png 500w\" width=\"1250\" height=\"720\" alt=\"Docker Desktop Run Image\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/ebpp/docker-images-run_hucbfd25d7e7db9c619cf173a313682643_43889_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/ebpp/docker-images-run.png\" width=\"1250\" height=\"720\" alt=\"Docker Desktop Run Image\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eDocker Desktop Run Image\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eClick run and a popup window will appear for you to create a new container:\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/ebpp/new-container.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_500x0_resize_box_2.png 500w\" width=\"592\" height=\"255\" alt=\"Docker Desktop New Container\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/ebpp/new-container_hucbc621553dd2780f278f64af50ca01a4_8709_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/ebpp/new-container.png\" width=\"592\" height=\"255\" alt=\"Docker Desktop New Container\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eDocker Desktop New Container\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eClick the \u0026ldquo;Optional Settings\u0026rdquo; dropdown to expand the menu. At minimum, you need to enter the host port (should usually be \u003ccode\u003e1127\u003c/code\u003e). You can give the container an optional name if you would like. If not, a name will be randomly generated for the container. No other values should be set:\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/ebpp/new-container-settings.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_500x0_resize_box_2.png 500w\" width=\"592\" height=\"554\" alt=\"Docker Desktop New Container Settings\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/ebpp/new-container-settings_hu8e1089ee4583e15de024cbad6fb28c97_17535_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/ebpp/new-container-settings.png\" width=\"592\" height=\"554\" alt=\"Docker Desktop New Container Settings\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eDocker Desktop New Container Settings\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eClick \u003ccode\u003eRun\u003c/code\u003e and a new container will be generated and you will be brought to the \u0026ldquo;Containers / Apps\u0026rdquo; panel. The EBPP container should appear in the list and should automatically start:\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/ebpp/docker-containers.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_500x0_resize_box_2.png 500w\" width=\"1250\" height=\"720\" alt=\"Docker Desktop Containers\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/ebpp/docker-containers_hu328b8654f76ae7b85036f3b638c9f65c_17709_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/ebpp/docker-containers.png\" width=\"1250\" height=\"720\" alt=\"Docker Desktop Containers\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eDocker Desktop Containers\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eTo verify that EBPP is working, you can click on the container name to be brought to the logs for this container. The output should say something like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eNo arguments passed. Using defaults.\n* Serving Flask app \u0026quot;ebpp\u0026quot; (lazy loading)\n* Environment: production\nWARNING: This is a development server. Do not use it in a production deployment.\nUse a production WSGI server instead.\n* Debug mode: off\n* Running on http://0.0.0.0:1127/ (Press CTRL+C to quit)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAt this point, EBPP should be installed and running! You can now launch your modded Minecraft game on the same computer and should be able to connect.\u003c/p\u003e\n\u003ch3 id=\"mac-install\"\u003eMac Install\u003c/h3\u003e\n\u003cp\u003eInstallation on a Mac is essentially the same as the Windows install except that you must use Docker Desktop for Mac. A guide for how to do this can be found on \u003ca href=\"https://docs.docker.com/docker-for-mac/install/\"\u003ethis page\u003c/a\u003e. Once you have Docker installed, you will follow essentially the same steps except you will need to run the build command in your Terminal instead of in the command prompt.\u003c/p\u003e\n\u003ch3 id=\"linux-install\"\u003eLinux Install\u003c/h3\u003e\n\u003cp\u003eUnfortunately there is no Docker Desktop application for Linux. Please refer to the advanced install guide below.\u003c/p\u003e\n\u003ch2 id=\"advanced-install\"\u003eAdvanced Install\u003c/h2\u003e\n\u003cp\u003eThis guide covers installation for advanced users. If you\u0026rsquo;re trying to set up EBPP for multiplayer servers, then you\u0026rsquo;re in the right place.\u003c/p\u003e\n\u003cdiv class=\"alert alert-warning d-flex\" role=\"alert\"\u003e\n  \u003cdiv class=\"flex-shrink-1 alert-icon\"\u003e❌\u003c/div\u003e\n  \u003cdiv class=\"w-100\"\u003eOnce you're done installing, make sure to read the advanced info section. There is a lot of important information that you should seriously consider.\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003eWhen installing EBPP you have two options. The first uses Docker to automate the process. The second option is manual installation. We highly recommend using Docker over a bare metal installation.\u003c/p\u003e\n\u003ch3 id=\"docker-method\"\u003eDocker Method\u003c/h3\u003e\n\u003cp\u003eFirst make sure you have Docker installed on your computer/server. Then build with this command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003edocker build github.com/ElectricBlocks/ebpp -t ebpp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOnce the docker image is finished building, you can run with the command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003edocker run -d -p 1127:1127 ebpp\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"manual-method\"\u003eManual Method\u003c/h3\u003e\n\u003cp\u003eTo install manually, you will need to have Python 3.8+, pip, and git.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003egit clone https://github.com/ElectricBlocks/ebpp.git\n\u003cspan style=\"color:#8be9fd;font-style:italic\"\u003ecd\u003c/span\u003e ebpp\npip install -r requirements.txt\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOnce the Python packages are installed, you can run with the command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003epython ebpp.py\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"advanced-information\"\u003eAdvanced Information\u003c/h2\u003e\n\u003ch3 id=\"configuration\"\u003eConfiguration\u003c/h3\u003e\n\u003cp\u003eEBPP uses environment variables for configuration. The easiest way to load these variables is to create a \u003ccode\u003e.env\u003c/code\u003e file in the EBPP directory. The environment file will not overwrite any environment variables and you may set them how you like. The file should contain the contents:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"color:#8be9fd;font-style:italic\"\u003eEBPP_HOST\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e0.0.0.0\n\u003cspan style=\"color:#8be9fd;font-style:italic\"\u003eEBPP_PORT\u003c/span\u003e\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#bd93f9\"\u003e1127\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThese defaults should work fine, but you should modify them to fit your setup. Once you have configured and launched EBPP, you can test to ensure it is working and accessible by visiting \u003ccode\u003ehttp://[EBPP_HOST]:[EBPP_PORT]\u003c/code\u003e. The API endpoint is \u003ccode\u003ehttp://[EBPP_HOST]:[EBPP_PORT]/api\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id=\"security-considerations\"\u003eSecurity Considerations\u003c/h3\u003e\n\u003cp\u003eEBPP is \u003cstrong\u003eNOT\u003c/strong\u003e designed for public facing scenarios and has \u003cstrong\u003eNO\u003c/strong\u003e built-in security features. For this reason, we highly recommend that you install EBPP inside of a Docker container or some other virtualized environment. EBPP executes code based on packet input and so it is highly probable that there is a remote code execution vulnerability somewhere in there. We have never been security audited, nor are we likely to be anytime soon.\u003c/p\u003e\n\u003cp\u003eThe default configuration binds to \u003ccode\u003e0.0.0.0\u003c/code\u003e which accepts requests from any address regardless of source. This is the easiest to use, but also insecure. If you are running a Minecraft server, we recommend that you bind EBPP to the loopback address or an isolated Docker network address to ensure that EBPP is only accessible by the Minecraft server itself. We cannot make any guarantees about the security of this software, particularly if it\u0026rsquo;s not isolated from network access. If you are running EBPP on the same virtual machine as the Minecraft server, you must run EBPP as a different user that doesn\u0026rsquo;t have file permissions to read or write from anything non-essential. The user will need read access to your normal system files and should not have write access to anything.\u003c/p\u003e\n\u003cp\u003eIf you install EBPP on a separate server than the one hosting the Minecraft server, we recommend that you configure EBPP to only be accessible by LAN IP. Making EBPP only available through an institutional VPN is probably a good idea. We also recommend setting up strict firewall rules to ensure that communication only occurs between EBPP and your various Minecraft servers.\u003c/p\u003e\n\u003cp\u003eIf you do choose to run EBPP in a public-facing setting, you will need to take several measures to protect your security and performance. First of all, EBPP should be run in a virtual machine or other resource-limited container. That virtual machine should be in a DMZ that doesn\u0026rsquo;t have access to any other I/O or network resources. EBPP doesn\u0026rsquo;t have any built-in authentication, encryption, or scaling mechanisms. To deal with this, you should setup a standalone WSGI container such as Gunicorn or uWSGI which is only accessible through a reverse proxy like Apache, Nginx, or Caddy. You may want to also utilize rate-limiting or even an intrusion detection system like Fail2ban. While EBPP can be easily set up to utilize SSL through a reverse proxy, the Electric Blocks mod is not currently designed to support this. While a MITM attack seems unlikely, it is possible that confidential information could be leaked since no encryption is present. If this is a concern, do not setup EBPP in a public-facing setting.\u003c/p\u003e\n"},{id:8,href:"https://electricblocks.github.io/docs/project/overview/",title:"Overview",description:"General information about this project.",content:"\u003ch2 id=\"problem-definition\"\u003eProblem Definition\u003c/h2\u003e\n\u003cp\u003eOur project is defined by several problems. The core issue is to develop software that allows users to model electrical power flow. The software must model power flow realistically enough to enable quality education and research. Additionally, the software must work in a virtual video game environment and must be easy to use.\u003c/p\u003e\n\u003ch2 id=\"background\"\u003eBackground\u003c/h2\u003e\n\u003cp\u003eMinecraft is a 3D/VR video game that enables the creation of complex virtual worlds. The block based nature of the game makes it very easy for players to build nearly any structure. This approach has made the game very popular and also easy to modify. There are thousands of mods which do everything from adding new animals to flight simulators and much more. There are several mods that already exist which attempt to mimic power flow. Unfortunately, these do not model the operation/control of electrical systems in a way that is realistic enough to enable quality research and education in power systems. This is why we made Electric Blocks.\u003c/p\u003e\n\u003ch2 id=\"value-proposition\"\u003eValue Proposition\u003c/h2\u003e\n\u003cp\u003eTraditional tools used in the design and simulation of electric power flow networks require a highly technical understanding of power flow behavior, and are not readily accessible to learners due to their complex interfaces and results that are not easily interpreted. Our solution, Electric Blocks, is a Minecraft mod to attract those who are interested in designing and playing with power systems through the simple and familiar interface of Minecraft.\u003c/p\u003e\n\u003cp\u003eThis project\u0026rsquo;s value is primarily derived from its speed and ease of use. Electric Blocks works great as an educational tool as users can build simple power systems in mere seconds and get feedback. This project also has value for power flow engineering. This mod allows for engineers to work collaboratively in real-time to prototype and test power flow systems.\u003c/p\u003e\n\u003ch2 id=\"objective\"\u003eObjective\u003c/h2\u003e\n\u003cp\u003eThe overall objective of this mod is to enable the creation and use of realistic and accurate virtual reality models of electric power transmission, distribution, control, and usage scenarios for research and instruction purposes.\u003c/p\u003e\n\u003cp\u003eWhy did we create this mod? There are several mods modeling energy and mechanis. There are also a couple of mods for simulating electrical systems. However, these mods do not model electrical systems and their operation and control in a way that is realistic enough to enable quality research and education.\u003c/p\u003e\n\u003cp\u003eThat is where Electric Blocks comes in. Electric Blocks enables realistic modeling of power flows using the PandaPower API. This API is thoroughly tested against commercial software and so power flow systems created in-game will function just like real their real world counterparts.\u003c/p\u003e\n\u003cp\u003eThe software traditionally used for running power flow simulations is expensive and difficult to use. It can take many hours of practice and learning for novices to setup even the most simple of power flow circuits.\u003c/p\u003e\n\u003cp\u003eElectric Blocks aims to completely change this paradigm. With this mod, anyone can get in game and start connecting parts together. Setting up an electrical lamp with a connection to a coal generator is easy and gives immediate feedback. For those more technically inclined, power settings can be tweaked and monitored in game. Power distribution has never been as accessible as it is with Electric Blocks!\u003c/p\u003e\n\u003cp\u003eElectric Blocks uses Minecraft as a virtualized world where people can practice building power distribution systems without any danger and zero up front costs.\u003c/p\u003e\n"},{id:9,href:"https://electricblocks.github.io/docs/project/design/",title:"Design",description:"Record of our design process.",content:"\u003cp\u003eOur design process began in early September of 2020 and was focused entirely on solving our problem definition. Most of our overall design decisions were finalized by the end of September, but we continued to tweak the design as new discoveries were made.\u003c/p\u003e\n\u003ch2 id=\"initial-design\"\u003eInitial Design\u003c/h2\u003e\n\u003cp\u003eIn the initial documentation provided to us, our client outlined several suggestions on how to approach this project. They suggested the using Minecraft or Minetest as the platform for hosting our software. We could then use MCreator or the Minetest Lua API for programming the mod. Our client also noted that we should \u003cstrong\u003enot\u003c/strong\u003e attempt to write our own power flow simulation software and should instead use other software libraries for this task. This design consideration was critical as realistic and accurate simulation was a primary goal of this project. Our client had experience with an electrical power distribution system simulator called OpenDSS and suggested we look into using this together with DSS Python or some other API interface. We would then make calls to the interface from the mod to OpenDSS to perform power flow simulations and update the game state appropriately. This left us with an initial development stack shown in the image.\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/project/initial-stack-design.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_500x0_resize_box_2.png 500w\" width=\"1920\" height=\"1080\" alt=\"Initial Stack Design\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/project/initial-stack-design_hub3c95869a14afd26948c139c0768cca3_145291_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/project/initial-stack-design.png\" width=\"1920\" height=\"1080\" alt=\"Initial Stack Design\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eInitial Stack Design\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eWe could choose to design our mod using Minecraft or Minetest. We would then use their corresponding mod creation tools to add blocks into the game based on power engineering elements such as lines, loads, transformers, generators, etc. We would then use information from the game to make calls to OpenDSS using a compatibility layer. OpenDSS would then run a power flow study and return the results to our mod. Finally, the Electric Blocks Mod would use those results to inform the player and modify the game state.\u003c/p\u003e\n\u003cp\u003eWhile this design seemed like a good overall solution, we quickly realized that we had a lot of issues that we would need to resolve before proceeding. Should we use Minecraft or Minetest as the basis for our mod? How would our mod communicate with the simulator and is a compatibility layer needed to facilitate communication? How would this architecture work in singleplayer versus multiplayer settings? How would the mod translate the game state into a form that the simulator could understand? These are all questions that we had to do in-depth research on before we could arrive at a final design.\u003c/p\u003e\n\u003ch2 id=\"project-learning\"\u003eProject Learning\u003c/h2\u003e\n\u003cp\u003eWhile our initial design plan was solid, we still had many issues that we needed to research before moving forward.\u003c/p\u003e\n\u003ch4 id=\"should-we-use-minecraft-or-minetest-as-the-base-game-for-our-project\"\u003eShould we use Minecraft or Minetest as the base game for our project?\u003c/h4\u003e\n\u003cp\u003eThese were the two possibilities presented to us by our client. Both our team and client agreed that the block based virtual worlds of Minecraft and Minetest were an ideal sandbox environment for us to use as the basis for our mod, but which one should we use? Minecraft is substantially more popular and has an installation process that is familiar to many players. However, Minetest was designed from the ground up to support mods which provides several benefits. The Minetest Lua API is thoroughly documented and easy to use. Mods are contained and ran exclusively on the server side with code and media being automatically transferred to the client upon connection. This means that the programmer doesn\u0026rsquo;t have to worry about writing code for both the client and server side in Minetest and players don\u0026rsquo;t have to take any steps to use the mod if they can connect to a server running it. The benefits of Minetest are substantial, but we ultimately decided to target Minecraft as our base game instead. The target audience for this software is educators/students and engineers. This audience is largely already familiar with Minecraft and how to mod the game. If we went with Minetest, nearly anyone who wanted to use it would need to install this new piece of software. By choosing Minecraft, there would be more programming work involved, but we would be taking advantage of the knowledge, intuition, comfort, and excitement that many people have regarding Minecraft.\u003c/p\u003e\n\u003ch4 id=\"what-modding-platform-should-we-use-to-develop-the-mod\"\u003eWhat modding platform should we use to develop the mod?\u003c/h4\u003e\n\u003cp\u003eThe initial documentation provided by our client suggested that we use a development environment called MCreator to develop the mod. MCreator is designed to simplify the development process and make mod creation easy. While this seems like an appealing tool, further research made us decide against using it. MCreator is a closed system that simplifies code and prevents you from directly accessing Minecraft. While it does make the mod creation process easier, this tool seems to be best suited for individuals who are learning software development and not for those who are creating complex mods. MCreator is actually based on Forge which is the defacto standard modding platform for Minecraft and so that is what we decided to use. Forge hooks into Minecraft and provides us access to the game and an API for modifying game behavior.\u003c/p\u003e\n\u003ch4 id=\"how-would-our-mod-communicate-with-the-simulator-and-is-a-compatibility-layer-needed-to-facilitate-communication\"\u003eHow would our mod communicate with the simulator and is a compatibility layer needed to facilitate communication?\u003c/h4\u003e\n\u003cp\u003eOur client initially suggested that we use DSS Python to access API bindings for OpenDSS and that we could use shared files for communication. We quickly ran into issues with using this approach. While DSS Python is cross-platform compatible, it requires that you have the OpenDSS COM interface file compiled to target your specific operating system. OpenDSS is built for Windows and only unofficial builds are available for other platforms. OpenDSS is not cross-platform compatible. This makes installation more difficult and would require us to write platform specific code for interfacing with OpenDSS. We are using Java to write the mod and OpenDSS does not offer a Java binding. Additionally, the OpenDSS COM interface doesn\u0026rsquo;t provide any functionality for building a power network and requires that you provide it with a file in the form of a DSS script. All these issues meant that using OpenDSS for simulations was not practical for us or our users. Our team concluded that we would need to use some other software for running the simulations and that we would likely need to develop some sort of compatibility layer which allows our mod to communicate with the simulation software. The exact way out mod communicated with the simulator would be dependent on which simulation software we ended up using.\u003c/p\u003e\n\u003ch4 id=\"which-power-flow-simulation-software-should-we-use-instead\"\u003eWhich power flow simulation software should we use instead?\u003c/h4\u003e\n\u003cp\u003eSince we decided that OpenDSS wasn\u0026rsquo;t a good fit for our project, we scrambled to find a replacement. We realized that our replacement simulator had to meet several fairly stringent requirements to be useful for our project. Whatever we chose had to be:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCompatible with all major operating systems (Windows, Mac OS, Linux, etc)\u003c/li\u003e\n\u003cli\u003eEasy to install\u003c/li\u003e\n\u003cli\u003eCompletely free and open source\u003c/li\u003e\n\u003cli\u003eAble to run asymmetric three phase power flow\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThis meant that we couldn\u0026rsquo;t use any common commercial software offerings. We concluded that PandaPower was the best software to fit our needs.\u003c/p\u003e\n\u003ch2 id=\"final-design\"\u003eFinal Design\u003c/h2\u003e\n\u003cp\u003eWe utilized knowledge gained during research to refine our initial design and create a final design architecture.\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/project/final-stack-design.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_500x0_resize_box_2.png 500w\" width=\"1491\" height=\"1206\" alt=\"Final Stack Design\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/project/final-stack-design_hu42e16c6b1bffc157876b1e30539b6d32_309877_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/project/final-stack-design.png\" width=\"1491\" height=\"1206\" alt=\"Final Stack Design\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eFinal Stack Design\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eFirst, we will focus on the left hand side of the technology stack. At the very bottom left we use Minecraft running on Java to host our modification.\u003c/p\u003e\n\u003cp\u003eWe used the Forge modding API to interface with the game. Forge performs a series of modifications to Minecraft base game to assist in compatibility between mods and make modding easier. This gives us access to any information we might need about the Minecraft world. It additionally allows us to easily change the game state as needed.\u003c/p\u003e\n\u003cp\u003eOur Minecraft modification \u0026ldquo;Electric Blocks\u0026rdquo; sits at the top of this stack and is responsible for rendering the user interface, allowing users to construct electrical systems, requesting that simulations be performed on these electrical systems, and updating the in game state to reflect the results of the simulation.\u003c/p\u003e\n\u003cp\u003eSecond, we will focus on the right hand side of the technology stack. At the very bottom right, you can see the icons for PandaPower and Python. PandaPower is the validated library that performs the actual simulation. As we mentioned previously, this is a very important core requirement of our system. We need our results to be usable for real world education and engineering purposes.\u003c/p\u003e\n\u003cp\u003eAbove PandaPower is the logo for Flask. PandaPower works great for running the simulation, but we need a method of communication between PandaPower and the Electric Blocks mod. This is where Flask comes in. Flask is a micro web framework written in Python. It is classified as a microframework because it does not require particular tools or libraries. It has no database abstraction layer, form validation, or any other components where pre-existing third-party libraries provide common functions. On startup it binds to a port (defaults to 1127) and starts listening for HTTP requests. When an HTTP request is detected, it parses the incoming request and makes that information available for processing. This is where our software comes in.\u003c/p\u003e\n\u003cp\u003eAt the top right of the technology stack you can see the logo for Electric Blocks Panda Power (EBPP). EBPP functions are called by Flask when a request is made. EBPP checks to ensure the packet is properly formed and then uses information contained within it to call PandaPower functions to construct a network for simulation. Once the network is constructed, a power flow study is ran on that network. EBPP then extracts the results from PandaPower and converts them into an easily readable form for the Electric Blocks mod. This contains all of the information needed to update the in game state.\u003c/p\u003e\n\u003cp\u003eAll communication between Electric Blocks and EBPP is done using JSON formatting and conforms to a standard set of communication protocols. These communication protocols ensure that the mod and simulation are able to quickly and easily translate requests. This stack allows for many benefits as discussed in the project learning section.\u003c/p\u003e\n\u003ch3 id=\"ebpp-network-communication-protocol\"\u003eEBPP Network Communication Protocol\u003c/h3\u003e\n\u003cp\u003eThe EBPP Network Communication Protocol defines the standards for communication between the Electric Blocks mod and the EBPP simulation server. All requests \u003cstrong\u003emust\u003c/strong\u003e be in JSON format and \u003cstrong\u003emust\u003c/strong\u003e include a \u003ccode\u003estatus\u003c/code\u003e key that contains the request type. All documentation assumes well formed requests. Any modifications to requests may result in undefined behavior.\u003c/p\u003e\n\u003ch4 id=\"keep-alive\"\u003eKeep Alive\u003c/h4\u003e\n\u003cp\u003eA status of \u003ccode\u003eKEEP_ALIVE\u003c/code\u003e checks if the server exists and is responding to requests. This is a fairly simple way of validating that the endpoint being accessed is in fact an EBPP server and not some other server. Any other keys and fields other than \u003ccode\u003estatus\u003c/code\u003e are ignored here.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e{\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;KEEP_ALIVE\u0026#34;\u003c/span\u003e\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eA successful keep alive request will be met with the following response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e{\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;KEEP_ALIVE\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;response\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;Keep alive request acknowledged\u0026#34;\u003c/span\u003e\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"simulation-request\"\u003eSimulation Request\u003c/h4\u003e\n\u003cp\u003eA \u003ccode\u003estatus\u003c/code\u003e of \u003ccode\u003eSIM_REQUEST\u003c/code\u003e is the primary request for this server and the server will attempt to perform the simulation. Properties for each element will depend on the type, but all keys will be extracted and passed to PandaPower so care should be taken to ensure that you don\u0026rsquo;t pass any invalid values.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003e3phase\u003c/code\u003e key indicates whether any three phase elements are present in this network. At the time of writing, this feature has not been implemented and setting this to \u003ccode\u003etrue\u003c/code\u003e will result in undefined behavior.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003eelements\u003c/code\u003e key should contain a dictionary mapping an elements unique identifier to it\u0026rsquo;s corresponding information. Each element in the element dictionary must have a unique identifier of some kind attached to it to ensure proper extraction of results. This can be any string and we use UUIDs for this purpose, but theres no reason you couldn\u0026rsquo;t use a simple integer counter or anything else. Every single element in this dictionary should contain the \u003ccode\u003eetype\u003c/code\u003e key which should correspond to the short name of the element being added. Every element has some required fields which are defined in the PandaPower API. All other fields will be passed as optional parameters.\u003c/p\u003e\n\u003cp\u003eA simulation request will look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e{\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;SIM_REQUEST\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;3phase\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003efalse\u003c/span\u003e,\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;elements\u0026#34;\u003c/span\u003e: {\n        \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;UUID\u0026#34;\u003c/span\u003e: {\n            \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;gen\u0026#34;\u003c/span\u003e,\n            \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;bus\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;UUID of Bus\u0026#34;\u003c/span\u003e,\n            \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;p_mw\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e1.0\u003c/span\u003e,\n            \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;vm_pu\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e120\u003c/span\u003e,\n            \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;other_properties\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e,\n            ...\n        },\n        ...\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eEBPP will parse the request, construct the network using PandaPower API calls, run the simulation, and return the results. There are several possible statuses, but we will start by assuming the simulation was successful.\u003c/p\u003e\n\u003cp\u003eIn the event of a successful simulation, the server will reply with a \u003ccode\u003estatus\u003c/code\u003e of \u003ccode\u003eSIM_RESULT\u003c/code\u003e. Like the simulation request, the results will be held in a dictionary of \u003ccode\u003eelements\u003c/code\u003e. The unique identifier and \u003ccode\u003eetype\u003c/code\u003e of each element will match the request and will now contain the result values. The results that are reported are entirely dependent on the PandaPower API and will vary depending on the element type.\u003c/p\u003e\n\u003cp\u003eA successful simulation result will look something like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e{\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;SIM_RESULT\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;elements\u0026#34;\u003c/span\u003e: {\n        \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;UUID\u0026#34;\u003c/span\u003e: {\n            \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;gen\u0026#34;\u003c/span\u003e,\n            \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;p_mw\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e1.0\u003c/span\u003e,\n            \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;vm_pu\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e120.0\u003c/span\u003e,\n            \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;other_results\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e,\n            ...\n        },\n        ...\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd finally this is an example of a successful simulation request taken right from the Electric Blocks mod. This is a very simple network just containing an external grid connected to a load.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e{\n  \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;SIM_REQUEST\u0026#34;\u003c/span\u003e,\n  \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;3phase\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003efalse\u003c/span\u003e,\n  \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;elements\u0026#34;\u003c/span\u003e: {\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;f3ac0bc2-47a5-4527-996e-cd95ed553cae\u0026#34;\u003c/span\u003e: {\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;bus\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;vn_kv\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e20\u003c/span\u003e\n    },\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;f48bac4b-3aa4-45f4-947d-6c7646cce465\u0026#34;\u003c/span\u003e: {\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;load\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;in_service\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;bus\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;f3ac0bc2-47a5-4527-996e-cd95ed553cae\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;p_mw\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.00006\u003c/span\u003e\n    },\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;f3a62d80-d93a-4d4e-a176-676487c9cc35\u0026#34;\u003c/span\u003e: {\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;bus\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;vn_kv\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e20\u003c/span\u003e\n    },\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;a65b5154-b7a8-4184-a802-4eaaa09be0f4\u0026#34;\u003c/span\u003e: {\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;ext_grid\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;in_service\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#ff79c6\"\u003etrue\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;bus\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;f3a62d80-d93a-4d4e-a176-676487c9cc35\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;vm_pu\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e1\u003c/span\u003e\n    },\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;a929dc54-a867-4d85-aae3-3d14c84a4332\u0026#34;\u003c/span\u003e: {\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;line\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;from_bus\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;f3ac0bc2-47a5-4527-996e-cd95ed553cae\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;to_bus\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;f3a62d80-d93a-4d4e-a176-676487c9cc35\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;length_km\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.007\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;std_type\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;NAYY 4x50 SE\u0026#34;\u003c/span\u003e\n    }\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd the resulting response:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e{\n  \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;SIM_RESULT\u0026#34;\u003c/span\u003e,\n  \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;elements\u0026#34;\u003c/span\u003e: {\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;f3ac0bc2-47a5-4527-996e-cd95ed553cae\u0026#34;\u003c/span\u003e: {\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;bus\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;vm_pu\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.999999999460057\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;va_degree\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e-6.444894654701214e-8\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;p_mw\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.00006\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;q_mvar\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0\u003c/span\u003e\n    },\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;f48bac4b-3aa4-45f4-947d-6c7646cce465\u0026#34;\u003c/span\u003e: {\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;load\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;p_mw\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.00006\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;q_mvar\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0\u003c/span\u003e\n    },\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;f3a62d80-d93a-4d4e-a176-676487c9cc35\u0026#34;\u003c/span\u003e: {\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;bus\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;vm_pu\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e1\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;va_degree\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;p_mw\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e-0.00006000000003239657\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;q_mvar\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.00018472564618222633\u003c/span\u003e\n    },\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;a65b5154-b7a8-4184-a802-4eaaa09be0f4\u0026#34;\u003c/span\u003e: {\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;ext_grid\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;p_mw\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.00006000000003239657\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;q_mvar\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e-0.00018472564618222633\u003c/span\u003e\n    },\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;a929dc54-a867-4d85-aae3-3d14c84a4332\u0026#34;\u003c/span\u003e: {\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;etype\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;line\u0026#34;\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;p_from_mw\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e-0.000059999991175918325\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;q_from_mvar\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e6.749076907549577e-14\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;p_to_mw\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.000059999991208314896\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;q_to_mvar\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e-0.0001847256462497171\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;pl_mw\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e3.2396570777588896e-14\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;ql_mvar\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e-0.00018472564618222633\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;i_from_ka\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.0000017320505537747895\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;i_to_ka\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.0000056068086085411585\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;i_ka\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.0000056068086085411585\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;vm_from_pu\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.999999999460057\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;va_from_degree\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e-6.444894654701214e-8\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;vm_to_pu\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e1\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;va_to_degree\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0\u003c/span\u003e,\n      \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;loading_percent\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#bd93f9\"\u003e0.003948456766578281\u003c/span\u003e\n    }\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHopefully this should give you an idea of how this works!\u003c/p\u003e\n\u003ch4 id=\"general-request-errors\"\u003eGeneral Request Errors\u003c/h4\u003e\n\u003cp\u003eA proper request should result in the expected response, however, there are other possible values that \u003ccode\u003estatus\u003c/code\u003e could be if there is an error of some sort. Those will be covered in this section.\u003c/p\u003e\n\u003ch5 id=\"json-error\"\u003eJSON Error\u003c/h5\u003e\n\u003cp\u003eIf the body of the request could not be parsed as JSON, the \u003ccode\u003estatus\u003c/code\u003e will be \u003ccode\u003eJSON_ERROR\u003c/code\u003e. In this case, the following response is sent:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e{\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;JSON_ERROR\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;response\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;Some Error Message\u0026#34;\u003c/span\u003e\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"invalid-error\"\u003eInvalid Error\u003c/h5\u003e\n\u003cp\u003eIf the body of the request was able to be parsed as JSON, but an invalid status was given or there is some other issue with the request, the \u003ccode\u003estatus\u003c/code\u003e will be \u003ccode\u003eINVALID_ERROR\u003c/code\u003e. In this case, the following response will be sent:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e{\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;INVALID_ERROR\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;response\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;Some Error Message\u0026#34;\u003c/span\u003e\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"simulation-request-errors\"\u003eSimulation Request Errors\u003c/h4\u003e\n\u003cp\u003eWhen running a simulation request, in addition to the general errors, there are other possible error values that \u003ccode\u003estatus\u003c/code\u003e could be. Those will be covered in this section.\u003c/p\u003e\n\u003ch5 id=\"pandapower-error\"\u003ePandaPower Error\u003c/h5\u003e\n\u003cp\u003eThis occurs when the simulation request was accepted by EBPP, but calls to PandaPower resulted in an error \u003ccode\u003estatus\u003c/code\u003e of \u003ccode\u003ePP_ERROR\u003c/code\u003e. This is usually thrown when someone tries to run a simulation without a slack bus, but could also arise from a bug in PandaPower, a bug in EBPP, or the entering of \u003ccode\u003e0\u003c/code\u003e or \u003ccode\u003enull\u003c/code\u003e values in places where they shouldn\u0026rsquo;t be. More details about the error are contained in the \u003ccode\u003eresponse\u003c/code\u003e. In this case the response will look like this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e{\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;PP_ERROR\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;response\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;Some Error Message\u0026#34;\u003c/span\u003e\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"convergence-error\"\u003eConvergence Error\u003c/h5\u003e\n\u003cp\u003eThe clients simulation request was accepted by EBPP and PandaPower didn\u0026rsquo;t run into any errors when constructing the network, but the simulation was unable to converge on a stable result. In this case, the \u003ccode\u003estatus\u003c/code\u003e will be \u003ccode\u003eCONV_ERROR\u003c/code\u003e. A network can fail to converge on a solution for a wide variety of reasons. We are planning to integrate the possibility of running diagnostic reports when this occurs, but as of right now the response will just be this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e{\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;status\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;CONV_ERROR\u0026#34;\u003c/span\u003e,\n    \u003cspan style=\"color:#ff79c6\"\u003e\u0026#34;response\u0026#34;\u003c/span\u003e: \u003cspan style=\"color:#f1fa8c\"\u003e\u0026#34;Some Error Message\u0026#34;\u003c/span\u003e\n}\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"mod-design\"\u003eMod Design\u003c/h3\u003e\n\u003cp\u003eOne of the major issues that we had to consider as part of our design process was how our mod was going to track and process simulation networks built in game.\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/project/mod-api-interaction.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_500x0_resize_box_2.png 500w\" width=\"1920\" height=\"1080\" alt=\"Electric Blocks Mod / Forge API Interaction\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/project/mod-api-interaction_huad5b5aed7bb9e1524afeb1a375640cbe_197604_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/project/mod-api-interaction.png\" width=\"1920\" height=\"1080\" alt=\"Electric Blocks Mod / Forge API Interaction\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eElectric Blocks Mod / Forge API Interaction (Click to expand)\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eThe UML diagram shows the architecture for how this information was stored and processed. We are going to start with the simplest concepts and work our way up.\u003c/p\u003e\n\u003cp\u003eOn the right hand side of the diagram, we have the Minecraft world which is exposed by the Forge API. The game stores information about which blocks are in each location in the game. Simple blocks like stone have no unique information so to preserve memory no objects are created representing them. Intermediate blocks like Cake blocks which only have a finite amount of possible states can use \u0026ldquo;block states\u0026rdquo; to encode information like which direction the block is facing. More complex blocks like chests and furnaces, on the other hand, have more complex storage requirements. These blocks need to be able to store information such as which items are stored inside of it. For blocks like these, the possible states are nearly infinite. To allow for this, Minecraft uses a concept called \u0026ldquo;tile entities\u0026rdquo;. Tile entities are \u0026ldquo;attached\u0026rdquo; to a block and are used for storing additional information and code needed for complex blocks.\u003c/p\u003e\n\u003cp\u003eOur mod uses this \u0026ldquo;tile entity\u0026rdquo; concept for tracking information about elements in the electrical network. We created an abstract class called \u0026ldquo;SimulationTileEntity\u0026rdquo; which extends the \u0026ldquo;TileEntity\u0026rdquo; class. This class contains information such as a unique simulation identification number (UUID), what simulation type the element is, and what embedded buses the block has. It also provides an interface for receiving simulation results, converting the element to a JSON representation, and other important helper functions. This SimulationTileEntity is not actually instantiated, but is extended by each element so that they can store relevant information. Each element has a subclass of \u0026ldquo;SimulationTileEntity\u0026rdquo; attached to it and this creates a common interface for all electrical elements.\u003c/p\u003e\n\u003cp\u003eWhenever an electrical element is updated, a new \u0026ldquo;SimulationNetwork\u0026rdquo; is created with the updated element marked as the starting block. Simulation networks represent a collection of electrical elements connected by wires. The simulation network has functions for identifying connected blocks. This is done asynchronously in another thread to minimize impact on gameplay. Once the network has been fully constructed, it is marked as ready and it can be used to make requests.\u003c/p\u003e\n\u003cp\u003eAll simulation networks are managed by a singleton class called \u0026ldquo;SimulationHandler\u0026rdquo;. The simulation handler contains a list of all networks that need to be simulated. All simulations are handled in order to ensure that each successive change to a network is updated in the correct order. The simulation handler class contains all the code and logic used for communicating with EBPP. Whenever a new simulation needs to be created, the tile entity that was affected can call on the simulation handler singleton to create a new simulation network instance with that calling block as the starting point. Once the simulation network has completed building and is marked as ready, the simulation handler constructs a json representation of the network and sends a request over to EBPP for processing. Once EBPP has returned a response, the simulation handler calls the simulation networks update functions with the results which in turn calls each individual simulation tile entities update functions to pass the results to each element in the network. This carefully orchestrated interaction is what allows our mod to function.\u003c/p\u003e\n\u003ch3 id=\"identifying-networks\"\u003eIdentifying Networks\u003c/h3\u003e\n\u003cp\u003eOur previous diagram explains how simulation networks are managed, but now we will describe how the networks are actually built.\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/project/network-building-algorithm.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_500x0_resize_box_2.png 500w\" width=\"1632\" height=\"1364\" alt=\"Network Building Algorithm\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/project/network-building-algorithm_hu990375ece068514466fbefc520f251cb_208132_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/project/network-building-algorithm.png\" width=\"1632\" height=\"1364\" alt=\"Network Building Algorithm\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eNetwork Building Algorithm (Click to expand)\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eThis was another major design challenge that we had to solve. The network building diagram shows a flow chart for how this process works.\u003c/p\u003e\n\u003cp\u003eEvery simulation network starts at some electrical element. This element is marked as the starting block and it has no connections attached to it. Two separate queues are initialized one for checked blocks and one for unchecked blocks. The starting element is added to the unchecked list and then the algorithm starts running.\u003c/p\u003e\n\u003cp\u003eFirst we check if the unchecked blocks list is empty. If it is, we can mark this network as built and ready for simulation, but if not we dequeue the first block in the unchecked list. We then check if the block is already in the checked list (not indicated in diagram) and if it is we skip it. We then check if the block has an instance of \u0026ldquo;SimulationTileEntity\u0026rdquo; attached. This lets us determine whether or not the block is an electrical element. Wires are not considered electrical elements for this purpose.\u003c/p\u003e\n\u003cp\u003eIf the block does have the tile entity attached then it is added to the simulation network\u0026rsquo;s list of elements. We then check if the block has an existing connection. If it does then we finish the connection and add the connection to the network. We then add all blocks surrounding the one we are checking (max distance of 1) to the unchecked list and start new connections for them.\u003c/p\u003e\n\u003cp\u003eIf the block does not have a \u0026ldquo;SimulationTileEntity\u0026rdquo; attached, then we know the block is a wire so we extend the connection from the previous block and increment the length of the connection. We then add all blocks surrounding the one we are checking to the unchecked list and pass the current connection to those blocks.\u003c/p\u003e\n\u003cp\u003eThe block is then added to the \u0026ldquo;checked\u0026rdquo; list and we loop back to the start.\u003c/p\u003e\n\u003cp\u003eThis system resembles a path finding algorithm and it fans out searching for blocks that should be in the network. While this algorithm might seem simple, the actual implementation is fairly complex. Determining which blocks should be in the network is easy, but accurately determining exactly how each block is connected to the other blocks is substantially more difficult. The algorithm in the picture is a dramatically simplified view of what actually happens. To make this actually work, we had to create a private class called \u0026ldquo;ConnectedBlock\u0026rdquo; which stores information about the blocks position, current connection, whether or not it has a tile entity attached, and what the previous block was that added this block to the unchecked list. This connected block class maintains an ongoing series of links from the current block all the way back to the original starting block.\u003c/p\u003e\n\u003ch3 id=\"gui-network-communication-protocol\"\u003eGUI Network Communication Protocol\u003c/h3\u003e\n\u003cp\u003eNow that you have a good idea of how things are working, its time to complicate things even more. The original technology stack shown near the beginning of this document was actually a simplified version of what is really going on.\u003c/p\u003e\n\n  \n\u003cfigure class=\"border-0\"\u003e\n  \u003ca href=\"https://electricblocks.github.io/docs/project/complete-stack-design.png\"\u003e\n    \u003cimg class=\"img-fluid lazyload blur-up\" data-sizes=\"auto\" src=\"https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_20x0_resize_box_2.png\" data-srcset=\"https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_500x0_resize_box_2.png 500w\" width=\"2560\" height=\"1439\" alt=\"Complete Stack Design\"\u003e\n  \u003c/a\u003e\n  \u003cnoscript\u003e\u003cimg class=\"img-fluid\" sizes=\"100vw\" srcset=\"https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_900x0_resize_box_2.png 900w,https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_800x0_resize_box_2.png 800w,https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_700x0_resize_box_2.png 700w,https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_600x0_resize_box_2.png 600w,https://electricblocks.github.io/docs/project/complete-stack-design_hufd10add3480cc2baac0470697173cb10_513117_500x0_resize_box_2.png 500w\" src=\"https://electricblocks.github.io/docs/project/complete-stack-design.png\" width=\"2560\" height=\"1439\" alt=\"Complete Stack Design\"\u003e\u003c/noscript\u003e\n  \u003cfigcaption class=\"figure-caption\"\u003e\u003cem\u003eComplete Stack Design (Click to expand)\u003c/em\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003cp\u003eIn reality, the Electric Blocks system requires 3 pieces of software running at any one time. Those are:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eElectric Blocks Client Mod\u003c/li\u003e\n\u003cli\u003eElectric Blocks Server Mod\u003c/li\u003e\n\u003cli\u003eEBPP Simulation Server\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo help keep things simple for end users, the client mod and the server mod are packaged into a single “universal” JAR (Java Archive) file. Some code is common to both mods and some is executed only on the client or server side.\u003c/p\u003e\n\u003cp\u003eYou already saw how we synchronize data between the logical server and EBPP, but another challenge we faced in engineering this mod was synchronizing data between the logical client and the logical server. The native Minecraft networking code uses a TCP socket to synchronize data between the client and the server. We were able to easily leverage existing Minecraft code to enable the logical server to send updates to the logical client. Sending updates from the logical client to the logical server was a different story. We weren’t able to utilize native code and had to design another network communication protocol for this purpose. The protocol is defined by the table here:\u003c/p\u003e\n\n\n\n\n\n\u003ctable class=\"table table-bordered table-dark\"\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eIndex\u003c/th\u003e\n\u003cth\u003e# Bytes\u003c/th\u003e\n\u003cth\u003eData Type\u003c/th\u003e\n\u003cth\u003eVariable\u003c/th\u003e\n\u003cth\u003ePurpose\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e0 - 3\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003eint\u003c/td\u003e\n\u003ctd\u003ex\u003c/td\u003e\n\u003ctd\u003ex coord of updated TE\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e4 - 7\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003eint\u003c/td\u003e\n\u003ctd\u003ey\u003c/td\u003e\n\u003ctd\u003ey coord of updated TE\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e8 - 11\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003eint\u003c/td\u003e\n\u003ctd\u003ez\u003c/td\u003e\n\u003ctd\u003ez coord of updated TE\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e12\u003c/td\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003eboolean\u003c/td\u003e\n\u003ctd\u003einService\u003c/td\u003e\n\u003ctd\u003eIs TE enabled?\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e13 - 16\u003c/td\u003e\n\u003ctd\u003e4\u003c/td\u003e\n\u003ctd\u003eint\u003c/td\u003e\n\u003ctd\u003enumInputs\u003c/td\u003e\n\u003ctd\u003e# of inputs to a TE\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e17 - end\u003c/td\u003e\n\u003ctd\u003e8 * numInputs\u003c/td\u003e\n\u003ctd\u003edouble[]\u003c/td\u003e\n\u003ctd\u003einputs\u003c/td\u003e\n\u003ctd\u003eArray of TE inputs\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003eThis protocol was necessary for sending updates from the client GUI to the server. Since the data needed to do this was highly regular, we decided to use raw bytes format for maximum speed of encoding and decoding. Any time the user opens up a GUI using the multimeter tool and submit changes, their changes are sent as a packet of raw bytes as described above. This is validated on the server side and a simulation request is performed with the new info. The results of the simulation are then distributed to all connected players. This is what makes multiplayer possible!\u003c/p\u003e\n\u003ch2 id=\"validation\"\u003eValidation\u003c/h2\u003e\n\u003cp\u003eOne of the core requirements of the project was that it must model power flow in an accurate and realistic manner. Rather than try to make the simulator on our own, we decided to use the PandaPower library. This library contains undergoes over 250 tests to ensure proper functionality. These tests include automatic validation against industry standard commercial software to ensure the implementation is correct.\u003c/p\u003e\n\u003cp\u003eSince our software is using a validated simulation system library, our client did not request any validation of our software. We have chosen to validate our software by taking a sample of the test networks used to validate PandaPower and build them in Minecraft. We will then compare results to ensure that the mod is behaving correctly.\u003c/p\u003e\n"},{id:10,href:"https://electricblocks.github.io/docs/project/documentation/",title:"Documentation",description:"All public project management documentation.",content:"\u003ch2 id=\"problem-definition\"\u003eProblem Definition\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/files/Project%20Description.pdf\"\u003eOriginal Project Description\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/files/Product%20Requirements.pdf\"\u003eProduct Requirements\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"project-management\"\u003eProject Management\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/files/Project%20Schedule.xlsx\"\u003eProject Schedule\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/files/Design%20Validation%20Plan.pdf\"\u003eDesign Validation Plan\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"presentations\"\u003ePresentations\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/files/Electric%20Blocks%20Snapshot%201.pptx\"\u003eSnapshot #1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/files/Snapshot%202.png\"\u003eSnapshot #2\u003c/a\u003e (Poster - Large File)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/files/Concept%20Design%20Review.pptx\"\u003eConcept Design Review\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/files/Engineering%20Release%20Review.pptx\"\u003eEngineering Release Review\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"},{id:11,href:"https://electricblocks.github.io/docs/ebpp/",title:"EBPP",description:"",content:""},{id:12,href:"https://electricblocks.github.io/docs/electric-blocks/",title:"Electric Blocks",description:"",content:""},{id:13,href:"https://electricblocks.github.io/docs/project/",title:"Project",description:"",content:""},{id:14,href:"https://electricblocks.github.io/docs/prologue/",title:"Prologue",description:"Prologue Doks.",content:""},{id:15,href:"https://electricblocks.github.io/docs/",title:"Docs",description:"Electric Blocks Docs",content:""},];index.add(docs);userinput.addEventListener('input',show_results,true);suggestions.addEventListener('click',accept_suggestion,true);function show_results(){var value=this.value;var results=index.search(value,5);var entry,childs=suggestions.childNodes;var i=0,len=results.length;suggestions.classList.remove('d-none');results.forEach(function(page){entry=document.createElement('div');entry.innerHTML='<a href><span></span><span></span></a>';a=entry.querySelector('a'),t=entry.querySelector('span:first-child'),d=entry.querySelector('span:nth-child(2)');a.href=page.href;t.textContent=page.title;d.textContent=page.description;suggestions.appendChild(entry);});while(childs.length>len){suggestions.removeChild(childs[i])}}
function accept_suggestion(){while(suggestions.lastChild){suggestions.removeChild(suggestions.lastChild);}
return false;}}());